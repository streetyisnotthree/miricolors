<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Miracles</title>

  <!-- Favicon: simple yellow star (inline SVG) -->
  <link rel="icon" type="image/svg+xml"
        href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'%3E%3Cpolygon points='32,4 39,24 60,24 43,36 50,56 32,44 14,56 21,36 4,24 25,24' fill='%23FFD83D' stroke='%23E6B800' stroke-width='2'/%3E%3C/svg%3E" />

  <!-- Futuristic font -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;600;800&display=swap" rel="stylesheet">

  <style>
    :root{
      --bg-1:#f5f5f7;
      --bg-2:#ececef;
      --panel:#ffffff;
      --panel-edge:#d9d9de;
      --text:#222;
      --muted:#6b6b73;
      --chrome-top:#fdfdfd;
      --chrome-bottom:#e7e7ec;
      --chrome-border:#bdbdc6;
      --chrome-gloss:#ffffffcc;
      --link:#333;
      --link-hover:#000;
      --shadow:0 12px 24px rgba(0,0,0,.08), 0 2px 6px rgba(0,0,0,.08);
    }

    /* 2000s/early 2010s desktop vibe */
    html,body{
      height:100%;
      margin:0;
      background:
        radial-gradient(1200px 800px at 20% -10%, #ffffff 0%, var(--bg-1) 35%, var(--bg-2) 100%);
      color:var(--text);
      font-family:"Orbitron", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      letter-spacing:.2px;
    }

    .wrap{
      max-width: 980px;
      margin: 40px auto 80px;
      padding: 0 20px;
    }

    /* Rounded banner with embedded logo */
    header.banner{
      background: linear-gradient(180deg, var(--chrome-top), var(--chrome-bottom));
      border: 1px solid var(--chrome-border);
      border-radius: 22px;
      box-shadow: var(--shadow);
      position: relative;
      padding: 18px 22px;
    }

    header .row{
      display:flex;
      align-items:center;
      gap:16px;
    }

    .logo{
      display:flex;
      align-items:center;
      gap:16px;
    }

    .logo img{
      display:block;
      height:64px;                /* Adjust if needed */
      width:auto;
      filter: drop-shadow(0 1px 0 #fff) drop-shadow(0 6px 10px rgba(0,0,0,.08));
      user-select:none;
      -webkit-user-drag:none;
    }

    /* Time pill (top-right, XP/Vista gadget feel) */
    .clock{
      margin-left:auto;
      padding:6px 12px;
      border-radius: 14px;
      border:1px solid var(--chrome-border);
      background: linear-gradient(180deg,#ffffff,#ececf1);
      color:#111;
      font-weight: 600;
      font-size: 12px;
      letter-spacing: 1px;
      box-shadow: inset 0 1px 0 var(--chrome-gloss);
      min-width: 130px;
      text-align:center;
    }

    /* MP3/iPod-style nav bar */
    nav.navbar{
      margin-top:14px;
      background: linear-gradient(180deg, #f9f9fb 0%, #ededf2 55%, #e2e2ea 56%, #d8d8e2 100%);
      border:1px solid #bdbdca;
      border-radius: 28px;
      box-shadow:
        inset 0 2px 0 #fff,
        inset 0 -2px 0 rgba(0,0,0,.06),
        0 8px 18px rgba(0,0,0,.08);
      padding: 6px;
    }

    .tabs{
      display:flex;
      gap:8px;
      list-style:none;
      padding:0;
      margin:0;
      justify-content:center;
      align-items:center;
    }

    .tabs a{
      --btn-top:#ffffff;
      --btn-bot:#dfe1e9;
      display:inline-flex;
      align-items:center;
      justify-content:center;
      padding:10px 18px;
      min-width:98px;
      border-radius:20px;
      border:1px solid #b3b7c6;
      background: linear-gradient(180deg, var(--btn-top), var(--btn-bot));
      color:var(--link);
      text-decoration:none;
      font-weight:700;
      letter-spacing:.5px;
      text-shadow:0 1px 0 #fff;
      box-shadow:
        inset 0 1px 0 #fff,
        0 2px 0 #d2d5df,
        0 6px 14px rgba(0,0,0,.08);
      transition:
        transform .08s ease,
        box-shadow .12s ease,
        background .2s ease,
        color .2s ease;
      position:relative;
    }

    .tabs a:hover{
      color:var(--link-hover);
      transform: translateY(-1px);
      box-shadow:
        inset 0 1px 0 #fff,
        0 3px 0 #c7cad5,
        0 10px 18px rgba(0,0,0,.12);
      background: linear-gradient(180deg, #ffffff, #e8eaf2);
    }

    .tabs a:active{
      transform: translateY(0);
      box-shadow:
        inset 0 1px 0 #fff,
        0 2px 0 #c7cad5,
        0 6px 12px rgba(0,0,0,.10);
      background: linear-gradient(180deg, #f0f2f8, #dfe2ea);
    }

    /* Content panes (white/grey, classic panel) */
    main{
      margin-top:22px;
      display:grid;
      grid-template-columns: 1fr;
      gap:18px;
    }

    .panel{
      background: var(--panel);
      border:1px solid var(--panel-edge);
      border-radius: 16px;
      box-shadow: var(--shadow);
      overflow:hidden;
    }

    .panel .titlebar{
      background: linear-gradient(180deg, #fafafa, #ececf0);
      border-bottom:1px solid #d6d6dd;
      padding:10px 14px;
      display:flex;
      align-items:center;
      gap:10px;
    }

    .title{
      font-weight: 800;
      letter-spacing: 1px;
      font-size: 14px;
    }

    .panel .body{
      padding: 16px 18px 26px;
      min-height: 80px;
    }

    /* Subtle separators for empty lists (no extra text) */
    .empty{
      min-height: 44px;
      border: 2px dashed #e6e6ee;
      border-radius: 12px;
    }

    /* Footnote under What's New! */
    .coming-soon{
      margin-top: 12px;
      color: var(--muted);
      font-size: 12px;
      letter-spacing: .8px;
      text-transform: uppercase;
    }

    /* Footer spacer */
    footer{
      margin-top: 24px;
      color: var(--muted);
      font-size: 12px;
      text-align:center;
    }

    /* Improve focus for keyboard users */
    .tabs a:focus{
      outline: 2px solid #7aa2ff;
      outline-offset: 2px;
    }

    /* Compact on small screens */
    @media (max-width:640px){
      .tabs a{ min-width: auto; padding:9px 14px; }
      .logo img{ height:52px; }
      .clock{ display:none; }
    }
  </style>
</head>
<body>
  <div class="wrap">
    <header class="banner" role="banner" aria-label="Miracles banner">
      <div class="row">
        <div class="logo" aria-label="Site logo">
          <!-- Use the provided file name if saved alongside this HTML -->
          <img src="Logo2.png" alt="Miracles logo" />
        </div>

        <div class="clock" id="clock" aria-live="polite">--:--:--</div>
      </div>

      <nav class="navbar" aria-label="Primary">
        <ul class="tabs" id="navTabs">
          <li><a href="#" data-sound="0">Home</a></li>
          <li><a href="#" data-sound="1">Read</a></li>
          <li><a href="#" data-sound="2">About</a></li>
          <li><a href="#" data-sound="3">Archive</a></li>
          <li><a href="#" data-sound="4">Forums</a></li>
        </ul>
      </nav>
    </header>

    <main role="main">
      <!-- What's New! (empty for now; only "Coming soon") -->
      <section class="panel" aria-labelledby="whatsnew">
        <div class="titlebar">
          <div class="title" id="whatsnew">WHATâ€™S NEW!</div>
        </div>
        <div class="body">
          <div class="empty" aria-hidden="true"></div>
          <div class="coming-soon">Coming soon</div>
        </div>
      </section>

      <!-- Chapters (no entries yet) -->
      <section class="panel" aria-labelledby="chapters">
        <div class="titlebar">
          <div class="title" id="chapters">CHAPTERS</div>
        </div>
        <div class="body">
          <div class="empty" aria-hidden="true"></div>
        </div>
      </section>
    </main>

    <footer aria-hidden="true"> </footer>
  </div>

  <script>
    /* Clock (digital, updates each second) */
    const clockEl = document.getElementById('clock');
    function pad(n){ return String(n).padStart(2,'0'); }
    function tick(){
      const d = new Date();
      const hh = pad(d.getHours()), mm = pad(d.getMinutes()), ss = pad(d.getSeconds());
      clockEl.textContent = `${hh}:${mm}:${ss}`;
    }
    tick();
    setInterval(tick, 1000);

    /* Star/twinkle/sparkle sounds (distinct per tab) */
    const AudioCtx = window.AudioContext || window.webkitAudioContext;
    const audio = new AudioCtx();
    let unlocked = false;

    // On first interaction, resume context (autoplay policy)
    const unlock = () => {
      if (!unlocked && audio.state !== 'running') {
        audio.resume().then(() => unlocked = true).catch(()=>{});
      }
    };
    window.addEventListener('pointerdown', unlock, { once: true });
    window.addEventListener('keydown', unlock, { once: true });

    function burst(freq=1500, t=audio.currentTime, dur=0.18, gain=0.12, type='sine'){
      const o = audio.createOscillator();
      const g = audio.createGain();
      o.type = type;
      o.frequency.setValueAtTime(freq, t);
      o.frequency.exponentialRampToValueAtTime(freq*1.8, t + dur*0.6);
      g.gain.setValueAtTime(0.0001, t);
      g.gain.exponentialRampToValueAtTime(gain, t + 0.02);
      g.gain.exponentialRampToValueAtTime(0.0001, t + dur);
      o.connect(g).connect(audio.destination);
      o.start(t);
      o.stop(t + dur + 0.02);
    }

    function tinkle(seq=[], base=audio.currentTime){
      // quick shimmering triad/arpeggio
      let offset = 0;
      for(const {f, d=0.16, g=0.12, w='sine'} of seq){
        burst(f, base + offset, d, g, w);
        offset += d * 0.55;
      }
    }

    // Five distinct sparkle signatures
    const signatures = [
      // Home: bright quick triple
      [{f:1400},{f:1850,d:0.14,g:0.10},{f:2300,d:0.12,g:0.09,w:'triangle'}],
      // Read: soft up-gliss
      [{f:1100,d:0.18,g:0.10},{f:1600,d:0.16,g:0.09},{f:2100,d:0.14,g:0.08,w:'triangle'}],
      // About: glassy two-tone + ping
      [{f:1700,d:0.20,g:0.10,w:'triangle'},{f:1200,d:0.12,g:0.08},{f:2400,d:0.10,g:0.07}],
      // Archive: twinkle cluster
      [{f:1000,d:0.12,g:0.09},{f:1400,d:0.12,g:0.09},{f:2000,d:0.10,g:0.08},{f:2600,d:0.10,g:0.07}],
      // Forums: descending sparkle
      [{f:2200,d:0.16,g:0.10},{f:1700,d:0.14,g:0.09},{f:1300,d:0.12,g:0.08}]
    ];

    function playSparkle(index){
      const base = audio.currentTime + 0.01;
      const seq = signatures[index % signatures.length];
      tinkle(seq, base);
    }

    // Hook hover (mouseenter) on each tab
    const tabs = document.querySelectorAll('#navTabs a');
    tabs.forEach(a=>{
      a.addEventListener('mouseenter', e=>{
        unlock();             // ensure context is running
        const idx = Number(a.dataset.sound||0);
        playSparkle(idx);
      }, {passive:true});
    });

    // Optional: resume context if user hovers before click (best-effort)
    window.addEventListener('mousemove', unlock, { once:true, passive:true });
  </script>
</body>
</html>